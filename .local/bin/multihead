#!/usr/bin/env python3
# coding: utf-8

import os
import sys
import configparser

FIREFOX_PATH = os.path.join(os.path.expanduser('~'), '.mozilla', 'firefox')
profile_conf = configparser.ConfigParser()
profile_conf.read(os.path.join(FIREFOX_PATH, 'profiles.ini'))
PROFILE_PATH = os.path.join(FIREFOX_PATH, profile_conf.get('Profile0', 'Path'))
UCONFIG_PATH = os.path.join(PROFILE_PATH, 'user.js')

print(UCONFIG_PATH)

START_COMMANDS = [
    'xrandr --output DP-1 --primary --auto --right-of eDP-1 --output eDP-1 --auto',
    'pkill picom && sleep 0.3',
    'picom --backend glx --experimental-backends --vsync -b',
    '$HOME/.config/polybar/launch.sh',
    'screenkey -g 360x607+3450+349 --no-systray & disown',
]
START_FIREFOX_CONFIG = 'user_pref("browser.urlbar.suggest.history", false);'

STOP_COMMANDS = [
    'xrandr --output DP-1 --auto --output eDP-1 --off',
    'pkill picom && sleep 0.3',
    'picom --backend glx --experimental-backends --vsync -b',
    '$HOME/.config/polybar/launch.sh',
    'pkill screenkey',
]
STOP_FIREFOX_CONFIG = 'user_pref("browser.urlbar.suggest.history", true);'

def execute_commands(commands):
    for cmd in commands:
        if (ecode := os.system(cmd)) != 0:
            print(f'{ecode}:failed to execute:{cmd}')
            break

        print(f'0:{cmd}')

def write_firefox_config(config):
    with open(UCONFIG_PATH, 'w') as conf:
        conf.write(config)

    print('0:firefox config')

def start():
    execute_commands(START_COMMANDS)
    write_firefox_config(START_FIREFOX_CONFIG)

def stop():
    execute_commands(STOP_COMMANDS)
    write_firefox_config(STOP_FIREFOX_CONFIG)

def main():
    match len(sys.argv):
        case 1: start()
        case 2: stop()
        case _: exit(1)

if __name__ == '__main__':
    main()
